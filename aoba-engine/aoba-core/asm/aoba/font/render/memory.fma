module Aoba::Font::Render

  ;; Current statue
  module Status
    ;; The rendering is processing, but it's safe to copy data from it
    HAS_DATA = $01

    ;; The rendering is finished
    FINISHED = $80

    ;; Set if the end of the input stream has been reached
    END_OF_INPUT = $40

    ;; End of page
    END_OF_PAGE = $20

    ;; Action bitmask
    ACTION_BITMASK = $0E

    ;; No action
    ACTION_NONE = $00

    ;; Action WAIT
    ACTION_WAIT = $02

    ;; Action CONFIRM
    ACTION_CONFIRM = $04
  end

  ;; Internal status
  module InternalStatus
    ;; Set if the end of the input stream has been reached
    END_OF_INPUT = $40

    ;; End of page
    END_OF_PAGE = $20
  end

  module Flag
    SINGLE_ROW = $04
    COLOR_MASK = $03
  end

  ;; Action RAM
  scope :TempRAM, in: ActionRAM

  ;; Stage RAM
  scope :StageRAM, in: TempRAM, shared: true

  ;; End of the line
  declare :calc0, as: :uint32, in: TempRAM

  ;; Status to set after rendering
  declare :status, as: :uint8, in: TempRAM

  ;; Status to set after rendering
  declare :internal_status, as: :uint8, in: TempRAM

  ;; The current state
  declare :state, as: :uint16, in: TempRAM

  ;; The font address
  declare :font_address, as: :uint24, in: TempRAM

  ;; The current line text pointer
  declare :current_line, as: :uint16, in: TempRAM

  ;; The next line text pointer
  declare :current_next_line, as: :uint16, in: TempRAM



  ;; State used for communication between threads
  class State

    ;; ==== this area needs to be configured by you! ====

    ;; The font address
    declare :font_address, as: :uint24

    ;; The decompress buffer pointer
    declare :target_buffer, as: :uint16

    ;; The current line
    declare :current_line, as: :uint16

    ;; Used for options as high byte
    declare :current_line_index, as: :uint8

    ;; The state
    declare :state, as: :uint8

    ;; The internal state
    declare :internal_state, as: :uint8

    ;; Flags .....scc
    ;; cc: color (0,1,2 or 3 for 2bpp fonts)
    ;; s: 1: max 8 rows, 0: max 16 rows
    declare :color_and_flags, as: :uint8
    ; - no space -
    ;; The current align (0,1,$FF)
    declare :align, as: :uint8

    ;; Maximum number of tiles on X axis
    declare :max_num_tiles_per_row, as: :uint8

    ;; Set this to zero on when starting
    declare :current_option_offset, as: :uint8

    ;; The current tile index within the options
    declare :option_address, as: :uint16, length: MAX_OPTIONS

    ;; ==== generated by state 0 ====
    ;; Alignment in pixel from the left border
    declare :line_x_offset, as: :uint16

    ;; ==== generated by state 1, updated by 2 ====
    ;; Current X position
    declare :current_x_position, as: :uint16

    ;; Parameter for the current action
    declare :action_parameter, as: :uint8

    ;; ==== internal state ====
    ;; End of the line 
    declare :end_of_line, as: :uint16

  end

end
