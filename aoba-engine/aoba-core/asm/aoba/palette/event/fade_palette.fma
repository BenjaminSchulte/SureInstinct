module Aoba::Palette::Event::FadePalette

  ;; The event
  class Event < Base
    ;; The config address
    declare :config, as: :uint16
  end

  ;; Configuration
  class Config
    ;; The palette to load
    declare :palette_address, as: :uint16

    ;; Bitmap of palettes the modify
    declare :palette_mask, as: :uint16

    ;; The fade speed
    declare :speed, as: :uint8
  end

  ;; Loads the palette
  ;; @ignore-thread-safety
  ID = List.create "FadePalette" do
    Y.is_a! Event
    LDX   Y[:config]
    X.is_a! Config

    PHX

    ;; Loads the palette to the cache
    LDY   X[:palette_mask]
    LDA   X[:speed]
    STA   dp(Action::FadePalette.fade_speed)
    LDA   X[:palette_address]
    TAX
    LDA   dp(Action::FadePalette.fade_speed)
    JSR   Action::FadePalette.fade_all_to_palette

    ;; Frees the configuration
    PLX
    Thread.safe do
      JSL   Memory.free_miniblock_long
    end

  end

end
