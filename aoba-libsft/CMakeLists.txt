CMAKE_MINIMUM_REQUIRED(VERSION 3.7.2)

PROJECT(libaobasft)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wextra -Wunused-result -Winit-self -Wno-strict-aliasing -Wcast-align -Wcast-qual -Wuninitialized -Wmissing-declarations -Wnon-virtual-dtor -Werror")

SET(DEFAULT_BUILD_TYPE "Release")
IF(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  MESSAGE(STATUS "Setting build type to '${DEFAULT_BUILD_TYPE}' as none was specified.")
  SET(CMAKE_BUILD_TYPE "${DEFAULT_BUILD_TYPE}" CACHE STRING "Choose the type of build." FORCE)
  SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release")
ENDIF()

IF(CMAKE_BUILD_TYPE MATCHES Debug)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
ENDIF()

IF(CMAKE_BUILD_TYPE MATCHES Release)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
ENDIF()

FIND_PACKAGE(Qt5 COMPONENTS Core Gui LinguistTools REQUIRED)
FIND_PACKAGE(YAML REQUIRED)

SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)
SET(CMAKE_AUTOUIC ON)

FILE(GLOB_RECURSE LIBSFT_SRC src *.cpp)
FILE(GLOB_RECURSE LIBSFT_INCLUDE include *.hpp)

SET(CMAKE_CXX_STANDARD 11)

FIND_PACKAGE(Qt5 COMPONENTS Core REQUIRED)
FIND_PACKAGE(LibSamplerate)

ADD_LIBRARY(aobasft STATIC ${LIBSFT_SRC} ${LIBSFT_INCLUDE})
TARGET_LINK_LIBRARIES(aobasft PUBLIC Qt5::Core ${LIBSAMPLERATE_LIBRARY} ${YAML_LIBRARIES})
TARGET_INCLUDE_DIRECTORIES(aobasft PRIVATE ${LIBSAMPLERATE_INCLUDE_DIR} ${YAML_INCLUDES})
TARGET_INCLUDE_DIRECTORIES(aobasft PUBLIC include)
